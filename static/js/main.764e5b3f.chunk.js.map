{"version":3,"sources":["../../react-auto-scroll-time-select/dist/contexts/Select/index.js","../../react-auto-scroll-time-select/dist/components/atoms/ClearValue/index.js","../../react-auto-scroll-time-select/dist/components/atoms/DropDownArrow/index.js","../../react-auto-scroll-time-select/dist/components/atoms/InputForm/index.js","../../react-auto-scroll-time-select/dist/components/molecules/Control/index.js","../../react-auto-scroll-time-select/dist/components/atoms/OptionMenu/index.js","../../react-auto-scroll-time-select/dist/components/molecules/SelectOptions/index.js","../../react-auto-scroll-time-select/dist/components/molecules/SelectOptionsPortal/index.js","../../react-auto-scroll-time-select/dist/index.js","App.tsx","serviceWorker.ts","index.tsx"],"names":["Select","createContext","clearInputValue","onInputChange","onFocus","onBlur","onChange","selectControlRef","createRef","inputFormRef","scrollbarsRef","inputValue","menuOpen","offsetHeight","options","focusOptionMenuIndex","changeFocusOptionMenuIndex","findOption","isClearable","styles","menuPortalTarget","undefined","ClearValue","React","createElement","SelectContext","Consumer","clearValue","Fragment","clearValueBaseStyle","width","display","verticalAlign","cursor","color","onClick","current","focus","select","style","DropDownArrow","dropDownArrowWrapper","dropDownArrowItem","dropDownArrowWrapperBaseStyle","paddingRight","borderColor","dropDownArrowItemBaseStyle","borderStyle","borderWidth","margin","InputForm","inputForm","inputFormBaseStyle","height","border","paddingLeft","outline","lineHeight","fontSize","type","value","e","target","maxLength","index","findIndex","onKeyUp","key","label","length","ref","Control","control","controlBaseStyle","backgroundColor","borderRadius","overflow","position","borderCollapse","borderSpacing","OptionMenu","option","optionMenu","optionMenuBaseStyle","padding","alignItems","onMouseDown","find","SelectOptions","prevProps","this","props","optionMenuHeight","getValues","scrollHeight","scrollTop","selectOptions","selectOptionsBaseStyle","overflowY","background","zIndex","boxShadow","overFrameMenuPosition","Object","assign","top","Scrollbars","map","i","Component","SelectOptionsPortal","getBoundingClientRect","left","selectControlBottom","bottom","positionTop","createPortal","boxSizing","state","hourLimit","span","input","indexOf","replace","setState","num","slice","Array","from","_","filter","n","candidate","h","Math","floor","m","format","selectBaseStyle","Provider","App","useState","setOption","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.764e5b3f.chunk.js","sourcesContent":["import { createContext, createRef } from \"react\";\nconst Select = createContext({\n    clearInputValue: () => { },\n    onInputChange: () => { },\n    onFocus: () => { },\n    onBlur: () => { },\n    onChange: () => { },\n    selectControlRef: createRef(),\n    inputFormRef: createRef(),\n    scrollbarsRef: createRef(),\n    inputValue: null,\n    menuOpen: false,\n    offsetHeight: 0,\n    options: [],\n    focusOptionMenuIndex: 0,\n    changeFocusOptionMenuIndex: () => { },\n    findOption: () => false,\n    isClearable: true,\n    styles: {},\n    menuPortalTarget: undefined,\n});\nexport default Select;\n","import React from \"react\";\nimport { Fragment } from \"react\";\nimport SelectContext from \"../../../contexts/Select\";\nconst ClearValue = () => {\n    return (React.createElement(SelectContext.Consumer, null, ({ clearInputValue, inputFormRef, changeFocusOptionMenuIndex, isClearable, styles: { clearValue }, }) => {\n        if (!isClearable) {\n            return React.createElement(Fragment, null);\n        }\n        const clearValueBaseStyle = {\n            width: 17,\n            display: \"table-cell\",\n            verticalAlign: \"middle\",\n            cursor: \"pointer\",\n            \"&:hover\": {\n                color: \"rgba(0,0,0,.5)\",\n            },\n        };\n        return (React.createElement(\"div\", { onClick: () => {\n                changeFocusOptionMenuIndex(0);\n                clearInputValue();\n                if (inputFormRef.current) {\n                    inputFormRef.current.focus();\n                    inputFormRef.current.select();\n                }\n            }, style: clearValue ? clearValue(clearValueBaseStyle) : clearValueBaseStyle }, \"\\u00D7\"));\n    }));\n};\nexport default ClearValue;\n","import React from \"react\";\nimport SelectContext from \"../../../contexts/Select\";\nconst DropDownArrow = () => {\n    return (React.createElement(SelectContext.Consumer, null, ({ inputFormRef, styles: { dropDownArrowWrapper, dropDownArrowItem }, }) => {\n        const dropDownArrowWrapperBaseStyle = {\n            width: 25,\n            display: \"table-cell\",\n            verticalAlign: \"middle\",\n            paddingRight: 5,\n            cursor: \"pointer\",\n            \"&:hover > div\": {\n                borderColor: \"rgba(0,0,0,.5) transparent transparent\",\n            },\n        };\n        const dropDownArrowItemBaseStyle = {\n            borderColor: \"#999 transparent transparent\",\n            borderStyle: \"solid\",\n            borderWidth: \"5px 5px 2.5px\",\n            margin: \"0 auto\",\n            width: 0,\n            display: \"inline-block\",\n        };\n        return (React.createElement(\"div\", { onClick: () => {\n                if (inputFormRef.current) {\n                    inputFormRef.current.focus();\n                }\n            }, style: dropDownArrowWrapper\n                ? dropDownArrowWrapper(dropDownArrowWrapperBaseStyle)\n                : dropDownArrowWrapperBaseStyle },\n            React.createElement(\"div\", { style: dropDownArrowItem\n                    ? dropDownArrowItem(dropDownArrowItemBaseStyle)\n                    : dropDownArrowItemBaseStyle })));\n    }));\n};\nexport default DropDownArrow;\n","import React from \"react\";\nimport Select from \"../../../contexts/Select\";\nconst InputForm = () => {\n    return (React.createElement(\"div\", { style: { display: \"table-cell\", verticalAlign: \"middle\" } },\n        React.createElement(Select.Consumer, null, ({ inputFormRef, inputValue, menuOpen, onInputChange, onFocus, onBlur, onChange, options, focusOptionMenuIndex, changeFocusOptionMenuIndex, findOption, styles: { inputForm }, }) => {\n            const inputFormBaseStyle = {\n                height: \"calc(1.5em + .75rem + 2px)\",\n                border: 0,\n                paddingLeft: 10,\n                width: 56,\n                outline: \"none\",\n                lineHeight: 1.5,\n                fontSize: \"1rem\",\n            };\n            return (React.createElement(\"input\", { type: \"text\", value: inputValue || \"\", onChange: (e) => onInputChange(e.target.value), maxLength: 5, onFocus: onFocus, onBlur: () => {\n                    if (onChange) {\n                        if (inputValue) {\n                            const index = options.findIndex((options) => findOption(options, inputValue));\n                            if (index < 0) {\n                                onInputChange(null);\n                                onChange(null);\n                            }\n                            else if (focusOptionMenuIndex === index) {\n                                onChange(options[index]);\n                            }\n                        }\n                        else {\n                            onChange(null);\n                        }\n                    }\n                    onBlur();\n                }, onKeyUp: ({ key }) => {\n                    switch (key) {\n                        case \"Escape\":\n                        case \"Enter\":\n                            if (onChange) {\n                                onChange(options[focusOptionMenuIndex]);\n                            }\n                            onInputChange(options[focusOptionMenuIndex].label);\n                            if (menuOpen) {\n                                onBlur();\n                            }\n                            break;\n                        case \"ArrowDown\":\n                            if (options.length - 1 > focusOptionMenuIndex) {\n                                changeFocusOptionMenuIndex(focusOptionMenuIndex + 1);\n                                onInputChange(options[focusOptionMenuIndex + 1].label);\n                            }\n                            break;\n                        case \"ArrowUp\":\n                            if (focusOptionMenuIndex !== 0) {\n                                changeFocusOptionMenuIndex(focusOptionMenuIndex - 1);\n                                onInputChange(options[focusOptionMenuIndex - 1].label);\n                            }\n                            break;\n                        default:\n                            const index = options.findIndex((options) => findOption(options, inputValue));\n                            changeFocusOptionMenuIndex(index >= 0 ? index : 0);\n                            break;\n                    }\n                    if (key !== \"Enter\" && !menuOpen) {\n                        onFocus();\n                    }\n                }, ref: inputFormRef, style: inputForm ? inputForm(inputFormBaseStyle) : inputFormBaseStyle }));\n        })));\n};\nexport default InputForm;\n","import React from \"react\";\nimport ClearValue from \"../../atoms/ClearValue\";\nimport DropDownArrow from \"../../atoms/DropDownArrow\";\nimport InputForm from \"../../atoms/InputForm\";\nimport Select from \"../../../contexts/Select\";\nconst Control = () => {\n    return (React.createElement(Select.Consumer, null, ({ styles: { control } }) => {\n        const controlBaseStyle = {\n            backgroundColor: \"#fff\",\n            borderColor: \"#d9d9d9 #ccc #b3b3b3\",\n            borderRadius: 4,\n            border: \"1px solid #ccc\",\n            color: \"#333\",\n            cursor: \"default\",\n            outline: \"none\",\n            overflow: \"hidden\",\n            position: \"relative\",\n            display: \"table\",\n            borderCollapse: \"separate\",\n            borderSpacing: 0,\n            width: \"100%\",\n        };\n        return (React.createElement(\"div\", { style: control ? control(controlBaseStyle) : controlBaseStyle },\n            React.createElement(InputForm, null),\n            React.createElement(ClearValue, null),\n            React.createElement(DropDownArrow, null)));\n    }));\n};\nexport default Control;\n","import React from \"react\";\nimport SelectContext from \"../../../contexts/Select\";\nconst OptionMenu = ({ option: { label, value }, index }) => {\n    return (React.createElement(SelectContext.Consumer, null, ({ onInputChange, onChange, focusOptionMenuIndex, options, styles: { optionMenu }, }) => {\n        const optionMenuBaseStyle = {\n            color: \"#3c4043\",\n            padding: \"0 15px\",\n            height: 40,\n            display: \"flex\",\n            alignItems: \"center\",\n            cursor: \"pointer\",\n            fontSize: \"1rem\",\n            backgroundColor: index == focusOptionMenuIndex ? \"#f1f3f4\" : \"inherit\",\n            \"&:hover\": {\n                backgroundColor: \"#f1f3f4\",\n            },\n        };\n        return (React.createElement(\"div\", { onMouseDown: () => {\n                onInputChange(value);\n                if (onChange) {\n                    const option = options.find(({ value: optVal }) => optVal === value);\n                    onChange(option || options[0]);\n                }\n            }, style: optionMenu ? optionMenu(optionMenuBaseStyle) : optionMenuBaseStyle }, label));\n    }));\n};\nexport default OptionMenu;\n","import React, { Component } from \"react\";\nimport { Scrollbars } from \"react-custom-scrollbars\";\nimport SelectContext from \"../../../contexts/Select\";\nimport OptionMenu from \"../../atoms/OptionMenu\";\nclass SelectOptions extends Component {\n    shouldComponentUpdate(prevProps) {\n        return (prevProps.menuOpen !== this.props.menuOpen ||\n            prevProps.focusOptionMenuIndex !== this.props.focusOptionMenuIndex);\n    }\n    componentDidUpdate(prevProps) {\n        if (!prevProps.menuOpen && this.props.menuOpen) {\n            const index = this.props.options.findIndex((option) => this.props.findOption(option, this.props.inputValue));\n            this.props.changeFocusOptionMenuIndex(index >= 0 ? index : 0);\n        }\n        if (this.props.menuOpen && this.props.scrollbarsRef.current) {\n            const optionMenuHeight = this.props.scrollbarsRef.current.getValues().scrollHeight /\n                this.props.options.length;\n            this.props.scrollbarsRef.current.scrollTop((this.props.focusOptionMenuIndex - 2) * optionMenuHeight);\n        }\n    }\n    render() {\n        return (React.createElement(SelectContext.Consumer, null, ({ menuOpen, offsetHeight, options, styles: { selectOptions } }) => {\n            if (!menuOpen) {\n                return React.createElement(React.Fragment, null);\n            }\n            let selectOptionsBaseStyle = {\n                position: \"absolute\",\n                width: \"100%\",\n                overflowY: \"scroll\",\n                background: \"#fff\",\n                borderRadius: 2,\n                zIndex: 1,\n                boxShadow: \"0 4px 5px 0 rgba(0,0,0,0.14), 0 1px 10px 0 rgba(0,0,0,0.12), 0 2px 4px -1px rgba(0,0,0,0.2)\",\n            };\n            if (!this.props.overFrameMenuPosition) {\n                selectOptionsBaseStyle = Object.assign(Object.assign({}, selectOptionsBaseStyle), {\n                    top: offsetHeight,\n                });\n            }\n            return (React.createElement(\"div\", { style: Object.assign(Object.assign({}, (selectOptions\n                    ? selectOptions(selectOptionsBaseStyle)\n                    : selectOptionsBaseStyle)), { height: 200, margin: \"4px 0\" }) },\n                React.createElement(Scrollbars, { ref: this.props.scrollbarsRef }, options.map((option, i) => (React.createElement(OptionMenu, { key: i, option: option, index: i }))))));\n        }));\n    }\n}\nexport default SelectOptions;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport SelectContext from \"../../../contexts/Select\";\nimport SelectOptions from \"../SelectOptions\";\nconst SelectOptionsPortal = () => {\n    return (React.createElement(SelectContext.Consumer, null, ({ menuOpen, inputValue, scrollbarsRef, inputFormRef, focusOptionMenuIndex, options, findOption, changeFocusOptionMenuIndex, menuPortalTarget, selectControlRef, }) => {\n        if (!menuPortalTarget || !selectControlRef.current) {\n            return React.createElement(React.Fragment, null);\n        }\n        let overFrameMenuPosition = false;\n        const { left, top, width, bottom: selectControlBottom, } = selectControlRef.current.getBoundingClientRect();\n        let positionTop = top;\n        if (menuOpen && menuPortalTarget && inputFormRef.current) {\n            const scrollbarHeight = 200 + 8;\n            const { bottom: menuPortalBottom, } = menuPortalTarget.getBoundingClientRect();\n            if (menuPortalBottom < selectControlBottom + scrollbarHeight) {\n                positionTop -= scrollbarHeight;\n                overFrameMenuPosition = true;\n            }\n        }\n        return createPortal(React.createElement(\"div\", { style: {\n                left,\n                position: \"absolute\",\n                top: positionTop,\n                width,\n                zIndex: 9999,\n                boxSizing: \"border-box\",\n            } },\n            React.createElement(SelectOptions, { menuOpen: menuOpen, inputValue: inputValue, scrollbarsRef: scrollbarsRef, inputFormRef: inputFormRef, focusOptionMenuIndex: focusOptionMenuIndex, options: options, findOption: findOption, changeFocusOptionMenuIndex: changeFocusOptionMenuIndex, overFrameMenuPosition: overFrameMenuPosition })), menuPortalTarget);\n    }));\n};\nexport default SelectOptionsPortal;\n","import React from \"react\";\nimport { Component, createRef } from \"react\";\nimport SelectContext from \"./contexts/Select\";\nimport Control from \"./components/molecules/Control\";\nimport SelectOptions from \"./components/molecules/SelectOptions\";\nimport SelectOptionsPortal from \"./components/molecules/SelectOptionsPortal\";\nclass Select extends Component {\n    constructor(props) {\n        super(props);\n        this.selectControlRef = createRef();\n        this.inputFormRef = createRef();\n        this.scrollbarsRef = createRef();\n        this.state = {\n            hourLimit: props.hourLimit || 24,\n            span: props.span || 30,\n            inputValue: props.value ? props.value.value : \"\",\n            menuOpen: false,\n            focusOptionMenuIndex: 0,\n            findOption: props.findOption ||\n                (({ value }, input) => {\n                    let inputValue = input || \"\";\n                    if (inputValue.indexOf(\":\") < 0) {\n                        if (inputValue.length <= 2) {\n                            return value.indexOf(inputValue + \":\") > -1;\n                        }\n                        else {\n                            return value.replace(\":\", \"\").indexOf(inputValue) > -1;\n                        }\n                    }\n                    else {\n                        return value.indexOf(inputValue) > -1;\n                    }\n                }),\n            isClearable: props.isClearable === undefined ? true : props.isClearable,\n            styles: props.styles || {},\n        };\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value ||\n            (prevProps.value &&\n                this.props.value &&\n                (prevProps.value.label !== this.props.value.label ||\n                    prevProps.value.value !== this.props.value.value)) ||\n            prevProps.hourLimit !== this.props.hourLimit ||\n            prevProps.span !== this.props.span) {\n            this.setState({\n                inputValue: this.props.value ? this.props.value.value : null,\n                hourLimit: this.props.hourLimit || this.state.hourLimit,\n                span: this.props.span || this.state.span,\n            });\n        }\n    }\n    format(num) {\n        return (\"0\" + num).slice(-2);\n    }\n    render() {\n        const candidates = Array.from({\n            length: this.state.hourLimit * 60 + 1,\n        })\n            .map((_, i) => i)\n            .filter((n) => n % this.state.span === 0);\n        const options = candidates.map((candidate) => {\n            const h = Math.floor(candidate / 60);\n            const m = candidate - h * 60;\n            const option = `${this.format(h)}:${this.format(m)}`;\n            return {\n                label: option,\n                value: option,\n            };\n        });\n        const selectBaseStyle = {\n            position: \"relative\",\n            \"*\": { boxSizing: \"border-box\" },\n        };\n        return (React.createElement(\"div\", { style: this.state.styles.select\n                ? this.state.styles.select(selectBaseStyle)\n                : selectBaseStyle, ref: this.selectControlRef },\n            React.createElement(SelectContext.Provider, { value: {\n                    clearInputValue: () => this.setState({ inputValue: null }),\n                    onInputChange: (inputValue) => this.setState({ inputValue }),\n                    onFocus: () => this.setState({ menuOpen: true }),\n                    onBlur: () => this.setState({ menuOpen: false }),\n                    onChange: this.props.onChange,\n                    inputValue: this.state.inputValue,\n                    menuOpen: this.state.menuOpen,\n                    selectControlRef: this.selectControlRef,\n                    offsetHeight: this.selectControlRef.current\n                        ? this.selectControlRef.current.offsetHeight\n                        : 0,\n                    inputFormRef: this.inputFormRef,\n                    scrollbarsRef: this.scrollbarsRef,\n                    options,\n                    focusOptionMenuIndex: this.state.focusOptionMenuIndex,\n                    changeFocusOptionMenuIndex: (i) => this.setState({ focusOptionMenuIndex: i }),\n                    findOption: this.state.findOption,\n                    isClearable: this.state.isClearable,\n                    styles: this.state.styles,\n                    menuPortalTarget: this.props.menuPortalTarget,\n                } },\n                React.createElement(Control, null),\n                this.props.menuPortalTarget ? (React.createElement(SelectOptionsPortal, null)) : (React.createElement(SelectOptions, { menuOpen: this.state.menuOpen, inputValue: this.state.inputValue, scrollbarsRef: this.scrollbarsRef, inputFormRef: this.inputFormRef, focusOptionMenuIndex: this.state.focusOptionMenuIndex, options: options, findOption: this.state.findOption, changeFocusOptionMenuIndex: (i) => this.setState({ focusOptionMenuIndex: i }) })))));\n    }\n}\nexport default Select;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Select, { OptionType } from \"react-auto-scroll-time-select\";\n\nfunction App() {\n  const [option, setOption] = useState<OptionType | null>();\n\n  const handleChange = (value: any) => {\n    setOption(value);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div style={{ padding: \"10px 0\" }}>{option && <>{option.value}</>}</div>\n        <div style={{ padding: \"10px 0\" }}>\n          <Select onChange={handleChange} value={option} />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}